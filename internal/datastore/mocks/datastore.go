// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/iamnande/ff8-magic-api/internal/datastore (interfaces: Datastore)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	datastore "github.com/iamnande/ff8-magic-api/internal/datastore"
)

// MockDatastore is a mock of Datastore interface.
type MockDatastore struct {
	ctrl     *gomock.Controller
	recorder *MockDatastoreMockRecorder
}

// MockDatastoreMockRecorder is the mock recorder for MockDatastore.
type MockDatastoreMockRecorder struct {
	mock *MockDatastore
}

// NewMockDatastore creates a new mock instance.
func NewMockDatastore(ctrl *gomock.Controller) *MockDatastore {
	mock := &MockDatastore{ctrl: ctrl}
	mock.recorder = &MockDatastoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatastore) EXPECT() *MockDatastoreMockRecorder {
	return m.recorder
}

// DescribeRecord mocks base method.
func (m *MockDatastore) DescribeRecord(arg0 string, arg1 datastore.RecordType) (*datastore.Record, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRecord", arg0, arg1)
	ret0, _ := ret[0].(*datastore.Record)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRecord indicates an expected call of DescribeRecord.
func (mr *MockDatastoreMockRecorder) DescribeRecord(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRecord", reflect.TypeOf((*MockDatastore)(nil).DescribeRecord), arg0, arg1)
}
